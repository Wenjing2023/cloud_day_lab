{"ast":null,"code":"var _jsxFileName = \"/Users/user/codeclan_work/React homework/lab_devops/src/components/Song.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Song(_ref) {\n  _s();\n  let {\n    title,\n    artist,\n    position,\n    image,\n    audio\n  } = _ref;\n  const [isPlaying, setIsPlaying] = useState(null);\n  const audioSrc = useRef(null);\n  const altTag = `${title} by ${artist}`;\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  useEffect(() => {\n    if (isPlaying === null) {\n      return;\n    }\n    isPlaying ? audioSrc.current.play() : audioSrc.current.pause();\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Play \" + altTag,\n      id: position,\n      className: `audio-control ${isPlaying ? \"playing\" : \"\"}`,\n      src: \"https://image.freepik.com/free-icon/play-button_318-42541.jpg\",\n      onClick: handlePlayPause\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: altTag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [position, \". \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioSrc,\n      id: 'audio' + position,\n      src: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Song, \"Pbf+ZI2pIr5Jalw0inK9NQUg380=\");\n_c = Song;\nexport default Song;\nvar _c;\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Song","_ref","_s","title","artist","position","image","audio","isPlaying","setIsPlaying","audioSrc","altTag","handlePlayPause","current","play","pause","className","children","alt","id","src","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/user/codeclan_work/React homework/lab_devops/src/components/Song.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nfunction Song({title, artist, position, image, audio}) {\n  const [isPlaying, setIsPlaying] = useState(null)\n  const audioSrc = useRef(null)\n\n  const altTag = `${title} by ${artist}`;\n\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  }\n\n  useEffect(() => {\n    if (isPlaying === null) {\n      return;\n    }\n\n    isPlaying ? audioSrc.current.play() : audioSrc.current.pause()\n  }, [isPlaying])\n\n  return (\n    <div className=\"song\">\n      <img\n        alt={\"Play \" + altTag}\n        id={position}\n        className={`audio-control ${isPlaying ? \"playing\" : \"\"}`}\n        src='https://image.freepik.com/free-icon/play-button_318-42541.jpg'\n        onClick={handlePlayPause}\n      />\n\n      <img\n        src={image}\n        alt={altTag} />\n\n      <div className='details'>\n        <h3>{position}. {title}</h3>\n        <h4>{artist}</h4>\n      </div>\n\n      <audio\n        ref={audioSrc}\n        id={'audio' + position}\n        src={audio} \n      />\n    </div>\n  );\n}\n\nexport default Song;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,IAAIA,CAAAC,IAAA,EAA0C;EAAAC,EAAA;EAAA,IAAzC;IAACC,KAAK;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAAN,IAAA;EACnD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMc,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMc,MAAM,GAAI,GAAER,KAAM,OAAMC,MAAO,EAAC;EAEtC,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BH,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,IAAIa,SAAS,KAAK,IAAI,EAAE;MACtB;IACF;IAEAA,SAAS,GAAGE,QAAQ,CAACG,OAAO,CAACC,IAAI,EAAE,GAAGJ,QAAQ,CAACG,OAAO,CAACE,KAAK,EAAE;EAChE,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,oBACET,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBlB,OAAA;MACEmB,GAAG,EAAE,OAAO,GAAGP,MAAO;MACtBQ,EAAE,EAAEd,QAAS;MACbW,SAAS,EAAG,iBAAgBR,SAAS,GAAG,SAAS,GAAG,EAAG,EAAE;MACzDY,GAAG,EAAC,+DAA+D;MACnEC,OAAO,EAAET;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,eAEF1B,OAAA;MACEqB,GAAG,EAAEd,KAAM;MACXY,GAAG,EAAEP;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAEjB1B,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBlB,OAAA;QAAAkB,QAAA,GAAKZ,QAAQ,EAAC,IAAE,EAACF,KAAK;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC5B1B,OAAA;QAAAkB,QAAA,EAAKb;MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb,eAEN1B,OAAA;MACE2B,GAAG,EAAEhB,QAAS;MACdS,EAAE,EAAE,OAAO,GAAGd,QAAS;MACvBe,GAAG,EAAEb;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACvB,EAAA,CA5CQF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AA8Cb,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}